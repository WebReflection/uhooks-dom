self.uhooksDOM=function(e){"use strict";var t=CustomEvent;function n(e){this.observe(e,{subtree:!0,childList:!0})}function s(e){e.type in this&&this[e.type](e)}var o=Promise;let c=null,a=new Set;const r=e=>{const{$:t,r:n,h:s}=e;w(n)&&(i.get(s).delete(e),n()),w(e.r=t())&&i.get(s).add(e)},l=()=>{const e=a;a=new Set,e.forEach((({h:e,c:t,a:n,e:s})=>{s&&e.apply(t,n)}))},i=new WeakMap,u=[],h=[];function d(e,t){return e!==this[t]}const p=e=>{const t=i.get(e);t&&E.then((()=>{t.forEach((e=>{e.r(),e.r=null})),t.clear()}))},f=()=>c,v=e=>i.has(e),w=e=>"function"==typeof e,y=e=>{const t={h:n,c:null,a:null,e:0,i:0,s:[]};return n;function n(){const n=c;c=t,t.e=t.i=0;try{return e.apply(t.c=this,t.a=arguments)}finally{c=n,u.length&&E.then(u.forEach.bind(u.splice(0),r)),h.length&&h.splice(0).forEach(r)}}},E=new o((e=>e()));function g(e){const{_:t,value:n}=this;n!==e&&(this._=new Set,this.value=e,t.forEach((({h:e,c:t,a:n})=>{e.apply(t,n)})))}const m=(e,t)=>{const n=f(),{i:s,s:o}=n;return s!==o.length&&t&&!t.some(d,o[s]._)||(o[s]={$:e(),_:t}),o[n.i++].$},k=e=>(t,n)=>{const s=f(),{i:o,s:c,h:a}=s,r=o===c.length;s.i++,r&&(i.has(a)||i.set(a,new Set),c[o]={$:t,_:n,r:null,h:a}),(r||!n||n.some(d,c[o]._))&&e.push(c[o]),c[o].$=t,c[o]._=n},M=k(u),S=k(h),$=(e,t)=>w(t)?t(e):t,_=(e,t,n)=>{const s=f(),{i:o,s:c}=s;o===c.length&&c.push({$:w(n)?n(t):$(void 0,t),set:t=>{c[o].$=e(c[o].$,t),(e=>{a.has(e)||(e.e=1,a.add(e),E.then(l))})(s)}});const{$:r,set:i}=c[s.i++];return[r,i]};
/*! (c) Andrea Giammarchi - ISC */
let b=null,C=null,W=null;const L=new WeakMap,x=new WeakMap,O=(e,t,n,s)=>{const o=o=>{L.has(e)||(L.set(e,0),E.then((()=>{L.delete(e),e.apply(t,n)}))),s(o)};return x.set(s,o),o},N=(e,t,n,s)=>e?[s[0],x.get(s[1])||O(e,t,n,s[1])]:s,R=(e,t)=>{const n=y(t?function(){const[t,s,o]=[b,C,W];[b,C,W]=[n,this,arguments];try{return e.apply(C,W)}finally{[b,C,W]=[t,s,o]}}:e);return n},T=((e,t,o,c)=>{const a=new WeakMap,r=new WeakMap,l=new WeakMap,i=e=>a.has(e),u=e=>{i(e)&&(h(e,e.removeEventListener,a.get(e)),a.delete(e))},h=(e,t,n)=>{t.call(e,"disconnected",n),t.call(e,"connected",n)},d=(e,t,n,s)=>{for(let{length:o}=e,c=0;c<o;c++)p(e[c],t,n,s)},p=(e,n,s,c)=>{i(e)&&!s.has(e)&&(c.delete(e),s.set(e,0),e.dispatchEvent(new(o||CustomEvent)(n))),d(e[t||"children"]||[],n,s,c)},f=new(c||MutationObserver)((e=>{for(let{length:t}=e,n=0;n<t;n++){const{removedNodes:t,addedNodes:s}=e[n];d(t,"disconnected",l,r),d(s,"connected",r,l)}}));f.add=n,f.add(e||document);const{attachShadow:v}=Element.prototype;return v&&(Element.prototype.attachShadow=function(e){const t=v.call(this,e);return f.add(t),t}),{has:i,connect:(e,t)=>{u(e),(t||(t={})).handleEvent||(t.handleEvent=s),h(e,e.addEventListener,t),a.set(e,t)},disconnect:u,kill(){f.disconnect()}}})(document,"children",t),D=({firstChild:e})=>{if(e&&1!==e.nodeType&&!(e=e.nextElementSibling))throw"unobservable";return e},P=e=>{const{nodeType:t}=e;if(t)return 1===t?e:D(e);{const t=e.valueOf();return t!==e?P(t):D(t)}};return e.createContext=e=>({_:new Set,provide:g,value:e}),e.hooked=(e,t)=>{const n=R(e,t);return function(){const e=n.apply(this,arguments);if(v(n)){const t=P(e);T.has(t)||T.connect(t,{disconnected(){p(n)}})}return e}},e.useCallback=(e,t)=>m((()=>e),t),e.useContext=({_:e,value:t})=>(e.add(f()),t),e.useEffect=M,e.useLayoutEffect=S,e.useMemo=m,e.useReducer=(e,t,n)=>N(b,C,W,_(e,t,n)),e.useRef=e=>{const t=f(),{i:n,s:s}=t;return n===s.length&&s.push({current:e}),s[t.i++]},e.useState=e=>N(b,C,W,(e=>_($,e))(e))
/*! (c) Andrea Giammarchi - ISC */,e.wait=E,e}({});
