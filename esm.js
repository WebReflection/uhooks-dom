function e(e){this.observe(e,{subtree:!0,childList:!0})}function t(e){e.type in this&&this[e.type](e)}let n=null,s=new Set;const o=e=>{const{$:t,r:n,h:s}=e;p(n)&&(l.get(s).delete(e),n()),p(e.r=t())&&l.get(s).add(e)},c=()=>{const e=s;s=new Set,e.forEach((({h:e,c:t,a:n,e:s})=>{s&&e.apply(t,n)}))},l=new WeakMap,r=[],a=[];function i(e,t){return e!==this[t]}const h=e=>{const t=l.get(e);t&&v.then((()=>{t.forEach((e=>{e.r(),e.r=null,e.d=!0})),t.clear()}))},d=()=>n,u=e=>l.has(e),p=e=>"function"==typeof e,f=e=>{const t={h:s,c:null,a:null,e:0,i:0,s:[]};return s;function s(){const s=n;n=t,t.e=t.i=0;try{return e.apply(t.c=this,t.a=arguments)}finally{n=s,r.length&&v.then(r.forEach.bind(r.splice(0),o)),a.length&&a.splice(0).forEach(o)}}},v=Promise.resolve(),y=e=>({_:new Set,provide:E,value:e}),w=({_:e,value:t})=>(e.add(d()),t);function E(e){const{_:t,value:n}=this;n!==e&&(this._=new Set,this.value=e,t.forEach((({h:e,c:t,a:n})=>{e.apply(t,n)})))}const g=(e,t)=>m((()=>e),t),m=(e,t)=>{const n=d(),{i:s,s:o}=n;return s!==o.length&&t&&!t.some(i,o[s]._)||(o[s]={$:e(),_:t}),o[n.i++].$},$=e=>(t,n)=>{const s=d(),{i:o,s:c,h:r}=s,a=o===c.length;s.i++,a&&(l.has(r)||l.set(r,new Set),c[o]={$:t,_:n,r:null,d:!1,h:r}),(a||!n||c[o].d||n.some(i,c[o]._))&&e.push(c[o]),c[o].$=t,c[o]._=n,c[o].d=!1},_=$(r),S=$(a),b=(e,t)=>p(t)?t(e):t,k=(e,t,n)=>{const o=d(),{i:l,s:r}=o;l===r.length&&r.push({$:p(n)?n(t):b(void 0,t),set:t=>{r[l].$=e(r[l].$,t),(e=>{s.has(e)||(e.e=1,s.add(e),v.then(c))})(o)}});const{$:a,set:i}=r[o.i++];return[a,i]},M=e=>{const t=d(),{i:n,s:s}=t;return n===s.length&&s.push({current:e}),s[t.i++]};
/*! (c) Andrea Giammarchi - ISC */
let W=null,C=null,L=null;const x=new WeakMap,N=new WeakMap,O=(e,t,n,s)=>{const o=o=>{x.has(e)||(x.set(e,0),v.then((()=>{x.delete(e),e.apply(t,n)}))),s(o)};return N.set(s,o),o},T=(e,t,n,s)=>e?[s[0],N.get(s[1])||O(e,t,n,s[1])]:s,P=(e,t)=>{const n=f(t?function(){const[t,s,o]=[W,C,L];[W,C,L]=[n,this,arguments];try{return e.apply(C,L)}finally{[W,C,L]=[t,s,o]}}:e);return n},j=(e,t,n)=>T(W,C,L,k(e,t,n)),q=e=>T(W,C,L,(e=>k(b,e))(e))
/*! (c) Andrea Giammarchi - ISC */,z=((n,s,o,c)=>{const l=new WeakMap,r=new WeakMap,a=new WeakMap,i=e=>l.has(e),h=e=>{i(e)&&(d(e,e.removeEventListener,l.get(e)),l.delete(e))},d=(e,t,n)=>{t.call(e,"disconnected",n),t.call(e,"connected",n)},u=(e,t,n,s)=>{for(let{length:o}=e,c=0;c<o;c++)p(e[c],t,n,s)},p=(e,t,n,c)=>{i(e)&&!n.has(e)&&(c.delete(e),n.set(e,0),e.dispatchEvent(new(o||CustomEvent)(t))),u(e[s||"children"]||[],t,n,c)},f=new(c||MutationObserver)((e=>{for(let{length:t}=e,n=0;n<t;n++){const{removedNodes:t,addedNodes:s}=e[n];u(t,"disconnected",a,r),u(s,"connected",r,a)}}));f.add=e,f.add(n||document);const{attachShadow:v}=Element.prototype;return v&&(Element.prototype.attachShadow=function(e){const t=v.call(this,e);return f.add(t),t}),{has:i,connect:(e,n)=>{h(e),(n||(n={})).handleEvent||(n.handleEvent=t),d(e,e.addEventListener,n),l.set(e,n)},disconnect:h,kill(){f.disconnect()}}})(document,"children",CustomEvent),A=({firstChild:e})=>{if(e&&1!==e.nodeType&&!(e=e.nextElementSibling))throw"unobservable";return e},B=e=>{const{nodeType:t}=e;if(t)return 1===t?e:A(e);{const t=e.valueOf();return t!==e?B(t):A(t)}},D=(e,t)=>{const n=P(e,t);return function(){const e=n.apply(this,arguments);if(u(n)){const t=B(e);z.has(t)||z.connect(t,{disconnected(){h(n)}})}return e}};export{y as createContext,D as hooked,g as useCallback,w as useContext,_ as useEffect,S as useLayoutEffect,m as useMemo,j as useReducer,M as useRef,q as useState,v as wait};
